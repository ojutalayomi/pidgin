name: Comprehensive CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-stable-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-stable-

      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test

      - name: Run basic functionality test
        run: cargo run examples/hello.pg

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Check formatting
        run: cargo fmt -- --check

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

  build-basic:
    name: Basic Multi-Platform Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Test basic functionality
        run: cargo run --release examples/hello.pg

  performance:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    timeout-minutes: 25
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release version
        run: cargo build --release

      - name: Run performance benchmarks
        run: |
          echo "Running performance benchmarks..."
          time cargo run --release examples/performance_test.pg
          echo "Performance benchmarks completed"

      - name: Memory usage analysis
        run: |
          echo "Analyzing memory usage..."
          /usr/bin/time -v cargo run --release examples/performance_test.pg 2>&1 | grep "Maximum resident set size" || true

      - name: Test distribution script
        run: |
          chmod +x scripts/create-distribution.sh
          ./scripts/create-distribution.sh test-platform ubuntu-latest
          ls -la pidgin-test-platform/ 