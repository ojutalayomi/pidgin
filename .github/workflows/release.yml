name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux-x86_64
            artifact_name: pidgin-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            platform: macos-x86_64
            artifact_name: pidgin-macos-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows-x86_64
            artifact_name: pidgin-windows-x86_64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create distribution (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          chmod +x scripts/create-distribution.sh
          ./scripts/create-distribution.sh ${{ matrix.platform }} ${{ matrix.os }}

      - name: Create distribution (Windows)
        if: matrix.os == 'windows-latest'
        run: bash scripts/create-distribution.sh ${{ matrix.platform }} ${{ matrix.os }}
        shell: bash

      - name: Create zip archive (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path "pidgin-${{ matrix.platform }}" -DestinationPath "${{ matrix.artifact_name }}.zip"
        shell: powershell

      - name: Create zip archive (Unix)
        if: matrix.os != 'windows-latest'
        run: zip -r "${{ matrix.artifact_name }}.zip" "pidgin-${{ matrix.platform }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      discussions: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Looking for zip files:"
          find . -name "*.zip" -type f

      - name: Move zip files to root
        run: |
          find . -name "*.zip" -type f -exec mv {} . \;
          echo "Files in root after move:"
          ls -la *.zip

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            pidgin-linux-x86_64.zip
            pidgin-macos-x86_64.zip
            pidgin-windows-x86_64.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
